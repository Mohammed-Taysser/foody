name: CI

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  setup:
    name: Setup & Install Dependencies
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache-pnpm-store.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install pnpm globally
        run: npm install -g pnpm

      - name: Cache pnpm store
        id: cache-pnpm-store
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store/v3
          key: pnpm-store-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-${{ runner.os }}-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install pnpm globally
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run ESLint
        run: pnpm run lint

  test:
    name: Test with Coverage
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: foody
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      NODE_ENV: test
      PORT: 8080
      ALLOWED_ORIGINS: ''
      DATABASE_URL: postgresql://user:password@localhost:5432/foody
      JWT_SECRET: super_secret_key
      JWT_ACCESS_EXPIRES_IN: 1d
      JWT_REFRESH_EXPIRES_IN: 7d
      DEFAULT_TIMEZONE: Africa/Cairo

    needs: setup

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install pnpm globally
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run database migrations
        run: pnpm run prisma:deploy

      - name: Seed database
        run: pnpm run seed

      - name: Run tests with coverage
        run: pnpm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: coverage/lcov.info
          fail_ci_if_error: true
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}
